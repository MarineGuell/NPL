"""
Script d'√âvaluation Simple - Chatbot Kaeru

√âvalue les mod√®les d√©j√† entra√Æn√©s et g√©n√®re les visualisations de performance.
Ce script ne n√©cessite pas de r√©entra√Ænement, il charge les mod√®les existants.

Usage :
    python app/evaluate_models.py
"""

import os
import sys
from datetime import datetime

# Ajout du chemin pour les imports
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from models import MLModel, DLModel, AutoencoderSummarizer

def main():
    """Fonction principale."""
    print("üöÄ √âVALUATION DES MOD√àLES EXISTANTS")
    print("="*60)
    print(f"‚è∞ D√©but : {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # V√©rification des mod√®les disponibles
    models_available = []
    
    if os.path.exists("models/ml_model.joblib"):
        models_available.append("ML")
        print("‚úÖ Mod√®le ML trouv√©")
    else:
        print("‚ùå Mod√®le ML non trouv√©")
    
    if os.path.exists("models/dl_model.h5"):
        models_available.append("DL")
        print("‚úÖ Mod√®le DL trouv√©")
    else:
        print("‚ùå Mod√®le DL non trouv√©")
    
    if os.path.exists("models/autoencoder_summarizer.h5"):
        models_available.append("Autoencodeur")
        print("‚úÖ Autoencodeur trouv√©")
    else:
        print("‚ùå Autoencodeur non trouv√©")
    
    if not models_available:
        print("\n‚ùå Aucun mod√®le trouv√©!")
        print("üí° Entra√Ænez d'abord les mod√®les avec :")
        print("   python app/train_models_modular.py --all")
        return
    
    print(f"\nüìä √âvaluation de {len(models_available)} mod√®le(s) : {', '.join(models_available)}")
    
    # √âvaluation des mod√®les disponibles
    if "ML" in models_available:
        print("\n" + "="*60)
        print("ü§ñ √âVALUATION DU MOD√àLE ML")
        print("="*60)
        ml_model = MLModel()
        if ml_model.model is not None:
            ml_model.evaluate()
        else:
            print("‚ùå Erreur lors du chargement du mod√®le ML")
    
    if "DL" in models_available:
        print("\n" + "="*60)
        print("üß† √âVALUATION DU MOD√àLE DL")
        print("="*60)
        dl_model = DLModel()
        if dl_model.model is not None:
            dl_model.evaluate()
        else:
            print("‚ùå Erreur lors du chargement du mod√®le DL")
    
    if "Autoencodeur" in models_available:
        print("\n" + "="*60)
        print("üîÑ √âVALUATION DE L'AUTOENCODEUR")
        print("="*60)
        autoencoder = AutoencoderSummarizer()
        if autoencoder.model is not None:
            autoencoder.evaluate()
        else:
            print("‚ùå Erreur lors du chargement de l'autoencodeur")
    
    print("\n" + "="*60)
    print("üéâ √âVALUATION TERMIN√âE !")
    print("="*60)
    print(f"‚è∞ Fin : {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("\nüìÅ Visualisations g√©n√©r√©es dans app/plots/")
    print("\nüí° Pour une √©valuation compl√®te avec comparaisons :")
    print("   python app/evaluate_all_models.py")

if __name__ == "__main__":
    main() 